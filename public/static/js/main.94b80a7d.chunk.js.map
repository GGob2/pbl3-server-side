{"version":3,"sources":["store.js","components/Navigation.js","components/CardShow.js","components/CardComp.js","components/WhatIs.js","components/CardClass/CardForTutor.js","components/CardClass/CardForTutee.js","components/CurrentClass.js","routes/Home.js","routes/About.js","components/ClassContent.js","components/ClassTab.js","routes/Class.js","routes/ClassEdit.js","components/LoginForm.js","routes/Login.js","components/RegisterForm.js","routes/Register.js","routes/MakeClass.js","routes/User.js","components/Footer.js","components/App.js","index.js"],"names":["loginInfo","createSlice","name","initialState","user","nickname","class","reducers","updateUser","state","action","payload","logout","axios","get","URL","updateClass","store","configureStore","reducer","subscribe","console","log","getState","actions","login","connect","ownProps","loginState","props","dispatch","dlogout","dispatchUser","data","Navbar","collapseOnSelect","expand","bg","variant","to","Brand","Toggle","aria-controls","Collapse","id","Nav","className","Link","as","point","onClick","CardShow","_class","col","Col","md","key","_id","Card","body","Title","Text","tutorNickName","Button","block","classes","filter","length","Row","map","WhatIs","CardForTutor","Subtitle","undefined","LectureTimes","time","day","tutees","style","float","CardForTutee","CurrentClass","useState","clAsTutee","setCATutee","clAsTutor","setCATutor","Axios","then","response","dispatchClass","updated","setUpdated","checkClass","Container","About","text","setText","setInterval","Date","now","Overview","studyAbout","courses","course","description","Attendance","classType","QnA","SkypeLink","skypeLink","href","LectureNote","LectureNotes","lectureNote","title","content","RealTimeChat","VideoLink","VideoLinks","link","VideoLinkInput","classID","setDesc","setLink","Body","InputGroup","Prepend","Form","Control","placeholder","type","onChange","e","target","value","post","SkypeLinkInput","FormControl","aria-label","aria-describedby","MaxTuteeInput","classMaxTutee","history","tuteeMaxArray","Array","keys","maxTutee","setMaxTutee","tuteeMax","index","res","alert","push","LectureNoteInput","setTitle","setContent","ClassTab","classInfo","userInfo","setKey","Tabs","activeKey","onSelect","Tab","eventKey","lectureNotes","includes","Class","match","params","classLoaded","setClass","classState","setClassState","classTypeNum","setClassType","setUser","attenCode","setAttenCode","checkAuth","statesRaw","indexOf","classTypesRaw","classTypes","category","states","tutor","classesAsTutee","Append","auth","setClassInfo","userID","setUserID","userPW","setPassword","enterKey","window","event","keyCode","onClickLogin","password","maxWidth","Group","icon","faEnvelopeOpen","onKeyUp","faKey","controlId","Check","label","role","Login","MAJORLIST","RegisterForm","email","setEmail","authNum","setAuthNum","reAuthTime","setReAuthTime","sented","setSented","major","setMajor","setNickname","setTimer","a","timer","clearInterval","FormGroup","faEnvelope","disabled","faEnvelopeOpenText","faUserGraduate","faUserTie","Register","weeks","weeksRaw","categorys","MakeClass","setCategory","setStudyAbout","classname","setClassName","price","setPrice","classTypeSelect","setSelect","startTime","setStartTime","endTime","setEndTime","date","setDate","classDesc","setClDe","courseDesc","setCoDe","place","setPlace","grade","setGrade","startTimeArray","endTimeArray","ToggleButtonGroup","display","defaultValue","ToggleButton","size","Label","rows","week","Number","parseInt","toString","substring","class_description","time_day","time_start","time_finish","course_description","User","isDataQuerried","setUserInfo","setClasses","webmail","classesAsTutor","Footer","catch","error","path","exact","component","Home","ClassEdit","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.94b80a7d.chunk.js","sourcesContent":["import { configureStore, createSlice } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\nimport { URL } from \"./components/App\";\r\n\r\nconst loginInfo = createSlice({\r\n  name: \"LoginInformation\",\r\n  initialState: {\r\n    user: {\r\n      nickname: \"\",\r\n    },\r\n    class: [],\r\n  },\r\n  reducers: {\r\n    updateUser: (state, action) => {\r\n      return {\r\n        ...state,\r\n        user: action.payload,\r\n      };\r\n    },\r\n    logout: (state) => {\r\n      axios.get(URL + \"auth/logout\");\r\n      return {\r\n        ...state,\r\n        user: { nickname: \"\" },\r\n      };\r\n    },\r\n    updateClass: (state, action) => {\r\n      return {\r\n        ...state,\r\n        class: action.payload,\r\n      };\r\n    },\r\n  },\r\n});\r\n\r\nconst store = configureStore({ reducer: loginInfo.reducer });\r\nstore.subscribe(() => console.log(store.getState()));\r\nexport const { login, logout, updateClass, updateUser } = loginInfo.actions;\r\nexport default store;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Navbar, Nav } from \"react-bootstrap\";\r\nimport { logout, updateUser } from \"../store\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction Navigation({ loginState, dlogout, dispatchUser }) {\r\n  return (\r\n    <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n      <Link to=\"/\">\r\n        <Navbar.Brand>Tutor 2 Tutee</Navbar.Brand>\r\n      </Link>\r\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n        <Nav className=\"mr-auto mt-3\">\r\n          <Link to=\"/\">\r\n            <Nav.Link as=\"p\">Home</Nav.Link>\r\n          </Link>\r\n          <Link to=\"/about\">\r\n            <Nav.Link as=\"p\">About</Nav.Link>\r\n          </Link>\r\n        </Nav>\r\n        <Nav className=\"mt-3\">\r\n          {loginState.user.nickname !== \"\" ? (\r\n            <>\r\n              <Nav.Link as=\"p\">나의 포인트 : {loginState.user.point}</Nav.Link>\r\n              <Link to=\"/class/new\">\r\n                <Nav.Link as=\"p\">클래스 만들기</Nav.Link>\r\n              </Link>\r\n              <Link to=\"/user\">\r\n                <Nav.Link as=\"p\">Hello, {loginState.user.nickname}</Nav.Link>\r\n              </Link>\r\n              <Nav.Link as=\"p\" onClick={dlogout}>\r\n                Logout\r\n              </Nav.Link>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <Link to=\"/user/register\">\r\n                <Nav.Link as=\"p\">Register</Nav.Link>\r\n              </Link>\r\n              <Link to=\"/user/login\">\r\n                <Nav.Link as=\"p\">Login</Nav.Link>\r\n              </Link>\r\n            </>\r\n          )}\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n  return { loginState: state, props: ownProps };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    dlogout: () => dispatch(logout()),\r\n    dispatchUser: (data) => dispatch(updateUser(data)),\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Navigation);\r\n","import React from \"react\";\r\nimport { Card, Button, Col } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction CardShow({ _class, col }) {\r\n  return (\r\n    <Col md={col} className=\"my-3\" key={_class._id}>\r\n      <Card body>\r\n        <Card.Title>{_class.className}</Card.Title>\r\n        <Card.Text>{_class.tutorNickName}</Card.Text>\r\n        <Link to={`class/id/${_class._id}`}>\r\n          <Button block>자세히</Button>\r\n        </Link>\r\n      </Card>\r\n    </Col>\r\n  );\r\n}\r\n\r\nexport default CardShow;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Row, Button } from \"react-bootstrap\";\r\nimport CardShow from \"./CardShow\";\r\n\r\nfunction CardComp({ classes, user }) {\r\n  return (\r\n    <>\r\n      <h3>\r\n        현재 모집중인 강의 :{\" \"}\r\n        {classes.filter((_class) => _class.state !== \"InProgress\").length}개\r\n      </h3>\r\n      <Row className=\"text-center\">\r\n        {classes.length === 0 ? (\r\n          <>\r\n            {user.nickname === \"\" ? (\r\n              <h1 className=\"col-12 mt-3\">개설된 수업이 없습니다.</h1>\r\n            ) : (\r\n              <>\r\n                <h1 className=\"col-12 mt-3\">\r\n                  아무런 수업이 없어요! 개설하실레요?\r\n                </h1>\r\n                <Button>개설하러 가기!!</Button>\r\n              </>\r\n            )}\r\n          </>\r\n        ) : (\r\n          classes\r\n            .filter((_class) => _class.state !== \"InProgress\")\r\n            //InProgress인 강의는 제외한다.\r\n            .map((_class) => {\r\n              return <CardShow col={4} key={_class._id} _class={_class} />;\r\n            })\r\n        )}\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return { classes: state.class, user: state.user };\r\n}\r\n\r\nexport default connect(mapStateToProps)(CardComp);\r\n","import React from \"react\";\r\n\r\nfunction WhatIs() {\r\n  return (\r\n    <div className=\"text-center\">\r\n      <h1>What is Tutor2Tutee?</h1>\r\n      <p>튜터2튜티는 지식공유 플랫폼입니다!</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WhatIs;\r\n","import React from \"react\";\r\nimport { Card, Button } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction CardForTutor({ _class }) {\r\n  return (\r\n    <Card body className=\"mt-3 mx-auto col-md-5\">\r\n      <Card.Title className=\"text-center\">{_class.className}</Card.Title>\r\n      <Card.Subtitle className=\"text-center\">\r\n        {_class.tutorNickName}\r\n      </Card.Subtitle>\r\n      {_class.LectureTimes === undefined ? null : (\r\n        <Card.Text>\r\n          수업요일 : {_class.LectureTimes.map((time) => time.day)}\r\n        </Card.Text>\r\n      )}\r\n      <Card.Text>{_class.tutees.length}명이 수강중이예요!</Card.Text>\r\n      <Link to={`class/id/${_class._id}`}>\r\n        <Button style={{ float: \"center\" }} block>\r\n          자세히\r\n        </Button>\r\n      </Link>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default CardForTutor;\r\n","import React from \"react\";\r\nimport { Card, Button } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction CardForTutee({ _class }) {\r\n  return (\r\n    <Card body className=\"mt-3 mx-auto col-md-5\">\r\n      <Card.Title className=\"text-center\">{_class.className}</Card.Title>\r\n      <Card.Subtitle className=\"text-center\">\r\n        {_class.tutorNickName}\r\n      </Card.Subtitle>\r\n      <Link to={`class/id/${_class._id}`}>\r\n        <Button style={{ float: \"center\" }} block>\r\n          자세히\r\n        </Button>\r\n      </Link>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default CardForTutee;\r\n","import React from \"react\";\r\nimport Axios from \"axios\";\r\nimport { URL } from \"./App\";\r\nimport { useState } from \"react\";\r\nimport CardForTutor from \"./CardClass/CardForTutor\";\r\nimport { Row } from \"react-bootstrap\";\r\nimport CardForTutee from \"./CardClass/CardForTutee\";\r\n\r\nfunction CurrentClass({ nickname, user }) {\r\n  const [clAsTutee, setCATutee] = useState(undefined);\r\n  const [clAsTutor, setCATutor] = useState(undefined);\r\n  if (clAsTutee === undefined && clAsTutor === undefined) {\r\n    Axios.get(URL + \"user/class/tutee\").then((response) => {\r\n      setCATutee(response.data);\r\n    });\r\n    Axios.get(URL + \"user/class/tutor\").then((response) => {\r\n      setCATutor(response.data);\r\n    });\r\n  }\r\n  return (\r\n    <>\r\n      <h4>안녕하세요! {nickname}</h4>\r\n      지금 수강중인 강의 :\r\n      {clAsTutee === undefined || clAsTutee.length === 0 ? (\r\n        <h1>수강하는 강의가 없네요!!</h1>\r\n      ) : (\r\n        <Row>\r\n          {clAsTutee.map((_class) => {\r\n            return <CardForTutee key={_class._id} _class={_class} />;\r\n          })}\r\n        </Row>\r\n      )}\r\n      <br />\r\n      지금 가르치는 강의 :\r\n      {clAsTutor === undefined || clAsTutor.length === 0 ? (\r\n        <h1>수강하는 강의가 없네요!!</h1>\r\n      ) : (\r\n        <Row>\r\n          {clAsTutor.map((_class) => {\r\n            return <CardForTutor key={_class._id} _class={_class} />;\r\n          })}\r\n        </Row>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CurrentClass;\r\n","import React, { useState } from \"react\";\r\nimport CardComp from \"../components/CardComp\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { checkClass } from \"../components/App\";\r\nimport { updateClass } from \"../store\";\r\nimport WhatIs from \"../components/WhatIs\";\r\nimport CurrentClass from \"../components/CurrentClass\";\r\n\r\n// checkClass({dispatchClass})\r\nfunction Home({ user, dispatchClass }) {\r\n  const [updated, setUpdated] = useState(true);\r\n\r\n  if (updated) {\r\n    checkClass({ dispatchClass });\r\n    setUpdated(false);\r\n  }\r\n\r\n  return (\r\n    <Container className=\"pt-3\">\r\n      {user.nickname === \"\" ? <WhatIs /> : <CurrentClass />}\r\n      <CardComp />\r\n    </Container>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return { user: state.user };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    dispatchClass: (classes) => dispatch(updateClass(classes)),\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\r\n","import React, { useState } from \"react\";\r\n\r\nfunction About() {\r\n  const [text, setText] = useState(\"\");\r\n\r\n  setInterval(() => {\r\n    setText(Date.now());\r\n  }, 100000);\r\n\r\n  return <h2>This is about: {text}</h2>;\r\n}\r\n\r\nexport default About;\r\n","import React, { useState } from \"react\";\r\nimport { InputGroup, FormControl, Button, Form, Card } from \"react-bootstrap\";\r\nimport Axios from \"axios\";\r\nimport { URL } from \"./App\";\r\n\r\nfunction Overview({ studyAbout, courses }) {\r\n  return (\r\n    <>\r\n      <h1 className=\"text-center mt-3\">{studyAbout}</h1>\r\n      <ol>\r\n        {courses.map((course) => {\r\n          return <li key={course._id}>{course.description}</li>;\r\n        })}\r\n      </ol>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction Attendance({ classType }) {\r\n  return <h1>This is Attendance{classType}</h1>;\r\n}\r\n\r\nfunction QnA() {\r\n  return <h1>This is Question</h1>;\r\n}\r\n\r\nfunction SkypeLink({ skypeLink }) {\r\n  return (\r\n    <>\r\n      {skypeLink === undefined ? (\r\n        <h4>Skype 링크가 아직 없어요! 잠시만 기다려주세요~~</h4>\r\n      ) : (\r\n        <a href={skypeLink}>\r\n          <Button>Link to Skype Call</Button>\r\n        </a>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nfunction LectureNote({ LectureNotes }) {\r\n  return (\r\n    <>\r\n      {LectureNotes.length === 0 ? (\r\n        <h4>아직 수업노트가 없네요!!</h4>\r\n      ) : (\r\n        <ol>\r\n          {LectureNotes.map((lectureNote) => {\r\n            return (\r\n              <li key={lectureNote._id}>\r\n                <h4>{lectureNote.title}</h4>\r\n                <p>{lectureNote.content}</p>\r\n              </li>\r\n            );\r\n          })}\r\n        </ol>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nfunction RealTimeChat() {\r\n  return <h1>This is RealTimeChat</h1>;\r\n}\r\n\r\nfunction VideoLink({ VideoLinks }) {\r\n  return (\r\n    <ol>\r\n      {VideoLinks.map((link) => {\r\n        return (\r\n          <li>\r\n            <a href={link.link}>{link.description}</a>\r\n          </li>\r\n        );\r\n      })}\r\n    </ol>\r\n  );\r\n}\r\nfunction VideoLinkInput({ classID }) {\r\n  //동영상 강의 링크 업로드\r\n  const [description, setDesc] = useState(\"\");\r\n  const [link, setLink] = useState(\"\");\r\n  const sendLink = () => {\r\n    Axios.post(URL + \"class/\" + classID + \"/course\", {\r\n      link,\r\n      description,\r\n    }).then((response) => console.log(response));\r\n  };\r\n  return (\r\n    <Card className=\"mt-3\">\r\n      <Card.Title className=\"text-center mt-3\">\r\n        <h2>온라인 강의 등록</h2>\r\n      </Card.Title>\r\n      <Card.Subtitle className=\"text-center\">\r\n        강의는 유튜브 링크로 대체해주세요\r\n      </Card.Subtitle>\r\n      <Card.Body>\r\n        <InputGroup>\r\n          <InputGroup.Prepend>\r\n            <InputGroup.Text>온라인 강의 등록</InputGroup.Text>\r\n          </InputGroup.Prepend>\r\n          <Form.Control\r\n            className=\"col-3\"\r\n            placeholder=\"강의 제목\"\r\n            type=\"text\"\r\n            onChange={(e) => setDesc(e.target.value)}\r\n          />\r\n          <Form.Control\r\n            className=\"col-9\"\r\n            placeholder=\"강의 링크\"\r\n            type=\"text\"\r\n            onChange={(e) => setLink(e.target.value)}\r\n          />\r\n        </InputGroup>\r\n        <Button className=\"mt-3\" block onClick={sendLink}>\r\n          저장\r\n        </Button>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\nfunction SkypeLinkInput({ classID }) {\r\n  const [link, setLink] = useState(\"\");\r\n  const sendLink = () => {\r\n    Axios.post(URL + \"class/\" + classID + \"/skype\", {\r\n      skypeLink: link,\r\n    }).then((response) => console.log(response));\r\n  };\r\n  return (\r\n    <Card className=\"mt-3\">\r\n      <Card.Title className=\"mt-3 text-center\">\r\n        <h2>스카이프 링크 입력</h2>\r\n      </Card.Title>\r\n      <Card.Body>\r\n        <InputGroup>\r\n          <InputGroup.Prepend>\r\n            <InputGroup.Text>스카이프 공유 링크</InputGroup.Text>\r\n          </InputGroup.Prepend>\r\n          <FormControl\r\n            aria-label=\"Large\"\r\n            aria-describedby=\"inputGroup-sizing-sm\"\r\n            onChange={(e) => setLink(e.target.value)}\r\n          />\r\n        </InputGroup>\r\n        <Button className=\"mt-3\" block onClick={sendLink}>\r\n          입력\r\n        </Button>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n\r\nfunction MaxTuteeInput({ classID, classMaxTutee, history }) {\r\n  const tuteeMaxArray = [...Array(11).keys()];\r\n  const [maxTutee, setMaxTutee] = useState(classMaxTutee);\r\n  const sendLink = () => {\r\n    Axios.post(URL + \"class/\" + classID + \"/max-tutee\", { maxTutee }).then(\r\n      (res) => {\r\n        alert(res.data);\r\n        history.push(\"/\");\r\n      }\r\n    );\r\n  };\r\n  return (\r\n    <Card className=\"mt-3\">\r\n      <Card.Title className=\"text-center mt-3\">\r\n        <h3>최대 튜티수 변경</h3>\r\n      </Card.Title>\r\n      <Card.Body>\r\n        <InputGroup className=\"mt-3\">\r\n          <InputGroup.Prepend>\r\n            <InputGroup.Text>현재 : {classMaxTutee}명</InputGroup.Text>\r\n          </InputGroup.Prepend>\r\n          <Form.Control\r\n            as=\"select\"\r\n            onChange={(e) => {\r\n              setMaxTutee(e.target.value);\r\n            }}\r\n          >\r\n            {tuteeMaxArray.map((tuteeMax, index) => {\r\n              return (\r\n                <option key={index} value={tuteeMax + 3}>\r\n                  {tuteeMax + 3}\r\n                </option>\r\n              );\r\n            })}\r\n          </Form.Control>\r\n        </InputGroup>\r\n        <Button className=\"mt-3\" block onClick={sendLink}>\r\n          완료\r\n        </Button>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n\r\nfunction LectureNoteInput({ classID }) {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n  const sendLectureNote = () => {\r\n    if (title === \"\" || content === \"\") {\r\n      alert(\"강의노트 모든란을 채워주세요.\");\r\n    }\r\n    Axios.post(URL + \"class/\" + classID + \"/lecture-note\", {\r\n      title,\r\n      content,\r\n    }).then((res) => {\r\n      res.data === \"success\"\r\n        ? alert(\"강의노트 추가에 성공했어요!\")\r\n        : alert(\"강의노트 추가에 실패했어요...\");\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Card className=\"mt-3\">\r\n      <Card.Title className=\"text-center mt-3\">\r\n        <h3>수업노트 추가</h3>\r\n      </Card.Title>\r\n      <Card.Subtitle className=\"text-center\">\r\n        수업노트의 내용 창은 우측하단을 눌러서 확장이 가능해요!!\r\n      </Card.Subtitle>\r\n      <Card.Body>\r\n        <InputGroup>\r\n          <InputGroup.Prepend>\r\n            <InputGroup.Text>수업노트 제목</InputGroup.Text>\r\n          </InputGroup.Prepend>\r\n          <Form.Control\r\n            placeholder=\"노트 제목\"\r\n            type=\"text\"\r\n            onChange={(e) => setTitle(e.target.value)}\r\n          />\r\n        </InputGroup>\r\n        <InputGroup className=\"mt-3\">\r\n          <InputGroup.Prepend>\r\n            <InputGroup.Text>수업노트 내용</InputGroup.Text>\r\n          </InputGroup.Prepend>\r\n          <Form.Control\r\n            placeholder=\"노트 내용\"\r\n            as=\"textarea\"\r\n            type=\"text\"\r\n            onChange={(e) => setContent(e.target.value)}\r\n          />\r\n        </InputGroup>\r\n        <Button className=\"mt-3\" block onClick={sendLectureNote}>\r\n          저장\r\n        </Button>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport {\r\n  Overview,\r\n  Attendance,\r\n  QnA,\r\n  SkypeLink,\r\n  SkypeLinkInput,\r\n  LectureNote,\r\n  RealTimeChat,\r\n  VideoLink,\r\n  VideoLinkInput,\r\n  MaxTuteeInput,\r\n  LectureNoteInput,\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Tabs, Tab, Card } from \"react-bootstrap\";\r\nimport {\r\n  Overview,\r\n  Attendance,\r\n  QnA,\r\n  SkypeLink,\r\n  VideoLink,\r\n  LectureNote,\r\n  RealTimeChat,\r\n} from \"./ClassContent\";\r\n\r\nfunction ClassTab({ classInfo, userInfo, classType }) {\r\n  const [key, setKey] = useState(\"overview\");\r\n  return (\r\n    <Card>\r\n      <Tabs\r\n        className=\"my-3 mx-3\"\r\n        variant=\"pills\"\r\n        activeKey={key}\r\n        onSelect={(e) => setKey(e)}\r\n      >\r\n        <Tab eventKey=\"overview\" title=\"개요\">\r\n          {/* 개요 */}\r\n          <Overview\r\n            studyAbout={classInfo.studyAbout}\r\n            courses={classInfo.courses}\r\n          />\r\n        </Tab>\r\n        <Tab eventKey=\"attendance\" title=\"출석\">\r\n          <Attendance classType={classType} />\r\n        </Tab>\r\n        <Tab eventKey=\"lectureNote\" title=\"수업 노트\">\r\n          <LectureNote LectureNotes={classInfo.lectureNotes} />\r\n        </Tab>\r\n        <Tab eventKey=\"QnA\" title=\"Q&A\">\r\n          <QnA />\r\n        </Tab>\r\n        {[0].includes(classType) ? (\r\n          <Tab\r\n            eventKey=\"skypeLink\"\r\n            title=\"스카이프링크\"\r\n            className=\"text-center\"\r\n          >\r\n            <SkypeLink classType={classType} skypeLink={classInfo.skypeLink} />\r\n          </Tab>\r\n        ) : null}\r\n        {[1].includes(classType) ? (\r\n          <Tab eventKey=\"videoLink\" title=\"비디오 링크\">\r\n            <VideoLink classType={classType} VideoLinks={classInfo.courses} />\r\n          </Tab>\r\n        ) : null}\r\n        {[1, 2].includes(classType) ? (\r\n          <Tab eventKey=\"realTimeChat\" title=\"실시간 채팅방\">\r\n            <RealTimeChat classType={classType} />\r\n          </Tab>\r\n        ) : null}\r\n      </Tabs>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default ClassTab;\r\n","import React, { useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { Container, Button, Card, Form, InputGroup } from \"react-bootstrap\";\r\nimport ClassTab from \"../components/ClassTab\";\r\n\r\nimport {\r\n  states,\r\n  statesRaw,\r\n  classTypes,\r\n  classTypesRaw,\r\n  URL,\r\n} from \"../components/App\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Class({\r\n  match: {\r\n    params: { id },\r\n  },\r\n  history,\r\n}) {\r\n  const [_class, setClass] = useState({ classLoaded: false });\r\n  const [classState, setClassState] = useState();\r\n  const [classTypeNum, setClassType] = useState();\r\n  const [user, setUser] = useState({ _id: undefined });\r\n  const [attenCode, setAttenCode] = useState(\"\");\r\n\r\n  if (_class.classLoaded === false) {\r\n    Axios.get(URL + \"class/\" + id).then((response) => {\r\n      if (response.data === \"fail\") {\r\n        history.push(\"/\");\r\n      } else {\r\n        setClass(response.data);\r\n        setClassState(statesRaw.indexOf(response.data.state));\r\n        console.log(response.data);\r\n        setClassType(classTypesRaw.indexOf(response.data.classType));\r\n      }\r\n    });\r\n    setClass({ classLoaded: true });\r\n  }\r\n\r\n  if (user._id === undefined) {\r\n    checkAuth();\r\n  }\r\n\r\n  function checkAuth() {\r\n    Axios.get(URL + \"auth/isAuthenticated\").then((response) => {\r\n      response.data !== \"fail\" ? setUser(response.data) : setUser({ _id: \"\" });\r\n    });\r\n    setUser({ _id: \"\" });\r\n  }\r\n\r\n  function startAttendance() {\r\n    Axios.get(URL + \"class/\" + id + \"/attendance\").then((response) => {\r\n      setAttenCode(response.data);\r\n      alert(\"출석이 시작되었습니다!\" + response.data);\r\n    });\r\n  }\r\n\r\n  function getAttendance() {\r\n    Axios.post(URL + \"class/\" + id + \"/attendance\", { auth: attenCode }).then(\r\n      (response) => {\r\n        alert(response.data);\r\n      }\r\n    );\r\n  }\r\n\r\n  function startClass() {\r\n    Axios.get(URL + \"class/\" + id + \"/start\").then((response) => {\r\n      alert(response.data);\r\n    });\r\n  }\r\n\r\n  function joinClass() {\r\n    Axios.get(URL + \"class/\" + id + \"/join\").then((response) => {\r\n      if (response.data === \"fail\") {\r\n        alert(\"문제가 있네요!\");\r\n      } else {\r\n        alert(\"정상적으로 수강 신청했어요!\");\r\n        setClass({ classLoaded: false });\r\n        checkAuth();\r\n      }\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Container className=\"mt-3\">\r\n      <Card bg=\"light\">\r\n        <Card.Body>\r\n          {_class._id === id ? (\r\n            <>\r\n              <h1>{_class.className}</h1>\r\n              <p>\r\n                ClassType : {classTypes[classTypeNum]} Category :{\" \"}\r\n                {_class.category}\r\n                <br />\r\n                Tutor : {_class.tutorNickName}\r\n                <br />\r\n                State : {states[classState]}\r\n                <br />\r\n                User : {user._id}\r\n                <br />\r\n                Current / Max : {_class.tutees.length} / {_class.maxTutee}\r\n              </p>\r\n\r\n              {_class.tutor === user._id ? (\r\n                // 내가 튜터 이면\r\n                <>\r\n                  <Link to={_class._id + \"/edit\"}>\r\n                    <Button>설정하기</Button>\r\n                  </Link>\r\n                  <Button onClick={startAttendance}>출석하기</Button>\r\n                  {[1].includes(classState) ? (\r\n                    <Button onClick={startClass}>강의 마감하기</Button>\r\n                  ) : null}\r\n                </>\r\n              ) : user._id === \"\" ? null : [3].includes(classState) ? ( //게스트인 경우\r\n                // 내가 튜티이면\r\n                //강의를 개설할 준비가 되면\r\n                <>\r\n                  <p>내가 튜티네요!</p>\r\n                  {user.classesAsTutee.includes(_class._id) ? (\r\n                    //유저가 수강 중인 수업일 경우\r\n                    classTypeNum !== undefined &&\r\n                    [0, 3].includes(classTypeNum) ? (\r\n                      //온라인 실시간 수업 || 오프라인 일 경우의 인증번호받는 시스템이 필요\r\n                      <InputGroup>\r\n                        <InputGroup.Prepend>\r\n                          <InputGroup.Text>인증번호</InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <Form.Control\r\n                          placeholder=\"인증번호는 튜터에게 물어보세요!!\"\r\n                          onChange={(e) => setAttenCode(e.target.value)}\r\n                        ></Form.Control>\r\n                        <InputGroup.Append>\r\n                          <Button onClick={getAttendance}>출석 시작</Button>\r\n                        </InputGroup.Append>\r\n                      </InputGroup>\r\n                    ) : null\r\n                  ) : null}\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <p>내가 튜티네요!</p>\r\n                  {user.classesAsTutee.includes(_class._id) ? null : (\r\n                    <Button onClick={joinClass}>\r\n                      {_class.className} 참가하기\r\n                    </Button>\r\n                  )}\r\n                </>\r\n              )}\r\n              <ClassTab\r\n                classInfo={_class}\r\n                userInfo={user}\r\n                classType={classTypeNum}\r\n              />\r\n            </>\r\n          ) : null}\r\n        </Card.Body>\r\n      </Card>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Class;\r\n","import React, { useState } from \"react\";\r\nimport { Container, Form } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  SkypeLinkInput,\r\n  MaxTuteeInput,\r\n  LectureNoteInput,\r\n  VideoLinkInput,\r\n} from \"../components/ClassContent\";\r\nimport Axios from \"axios\";\r\nimport { URL } from \"../components/App\";\r\n\r\nfunction ClassEdit({\r\n  match: {\r\n    params: { id },\r\n  },\r\n  history,\r\n  user,\r\n  classes,\r\n}) {\r\n  const [classInfo, setClassInfo] = useState(undefined);\r\n  Axios.get(URL + \"class/\" + id).then((res) => {\r\n    setClassInfo(res.data);\r\n  });\r\n  return (\r\n    //TODO 잘못된 사용자 접근 차단\r\n    <Container>\r\n      <h1>안녕하세요! {user.nickname}</h1>\r\n      {classInfo === undefined ? null : (\r\n        <>\r\n          <h2>강의 : {classInfo.className} 관리페이지입니다.</h2>\r\n          <Form>\r\n            <LectureNoteInput classID={id} />\r\n            {classInfo.classType === \"RealtimeOnlineCourseType\" ? (\r\n              <SkypeLinkInput classID={id} />\r\n            ) : null}\r\n            {classInfo.classType === \"OnlineCourseType\" ? (\r\n              <VideoLinkInput classID={id} />\r\n            ) : null}\r\n            {classInfo.maxTutee === undefined ? null : (\r\n              <MaxTuteeInput classID={id} classMaxTutee={classInfo.maxTutee} />\r\n            )}\r\n          </Form>\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nfunction maptoProp(state) {\r\n  return { user: state.user, classes: state.class };\r\n}\r\n\r\nexport default connect(maptoProp)(ClassEdit);\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button, Card, InputGroup } from \"react-bootstrap\";\r\nimport { URL, checkAuth } from \"../components/App\";\r\nimport Axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateUser, logout } from \"../store\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faEnvelopeOpen, faKey } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nfunction LoginForm({ dispatchUser, dlogout, history }) {\r\n  const [userID, setUserID] = useState(\"\");\r\n  const [userPW, setPassword] = useState(\"\");\r\n  function enterKey() {\r\n    if (window.event.keyCode === 13) {\r\n      onClickLogin(dispatchUser, dlogout, history);\r\n    }\r\n  }\r\n\r\n  const onClickLogin = (dispatchUser, dlogout, history) => {\r\n    Axios.post(URL + \"auth/login\", { id: userID, password: userPW }).then(\r\n      (res) => {\r\n        if (res.data === \"fail\") {\r\n          alert(\"로그인 실패\");\r\n        } else {\r\n          console.log(\"로그인 성공\");\r\n          checkAuth({ dispatchUser, dlogout });\r\n          history.push(\"/\");\r\n        }\r\n      }\r\n    );\r\n  };\r\n  return (\r\n    <Card className=\"mt-3\" bg=\"light\">\r\n      <Card.Body\r\n        className=\"mt-3 mx-auto text-center\"\r\n        style={{ maxWidth: \"400px\" }}\r\n      >\r\n        <h4 className=\"text-center\">로그인</h4>\r\n        <Form className=\"mt-md-3\">\r\n          <Form.Group>\r\n            <InputGroup>\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text>\r\n                  <FontAwesomeIcon icon={faEnvelopeOpen} />\r\n                </InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <Form.Control\r\n                placeholder=\"이메일\"\r\n                onChange={(e) => {\r\n                  setUserID(e.target.value);\r\n                }}\r\n                onKeyUp={enterKey}\r\n              />\r\n              <InputGroup.Append>\r\n                <InputGroup.Text>@hknu.ac.kr</InputGroup.Text>\r\n              </InputGroup.Append>\r\n            </InputGroup>\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <InputGroup>\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text>\r\n                  <FontAwesomeIcon icon={faKey} />\r\n                </InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"비밀번호\"\r\n                onChange={(e) => {\r\n                  setPassword(e.target.value);\r\n                }}\r\n                onKeyUp={enterKey}\r\n              />\r\n            </InputGroup>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"formBasicCheckbox\">\r\n            <Form.Check type=\"checkbox\" label=\"비밀번호 저장\" />\r\n          </Form.Group>\r\n          <Button\r\n            block\r\n            className=\"my-md-3\"\r\n            onClick={() => {\r\n              onClickLogin(dispatchUser, dlogout, history);\r\n            }}\r\n          >\r\n            로그인\r\n          </Button>\r\n          <p>\r\n            {\" \"}\r\n            아이디가 없으신가요?\r\n            <span role=\"img\" aria-label=\"sweat\">\r\n              😅\r\n            </span>{\" \"}\r\n            : <Link to=\"/user/register\">회원가입</Link>\r\n          </p>\r\n        </Form>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    dispatchUser: (data) => dispatch(updateUser(data)),\r\n    dlogout: () => dispatch(logout()),\r\n  };\r\n}\r\nexport default connect(null, mapDispatchToProps)(LoginForm);\r\n","import React from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport LoginForm from \"../components/LoginForm\";\r\n\r\nfunction Login({ history }) {\r\n  return (\r\n    <Container>\r\n      <LoginForm history={history} />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React, { useState } from \"react\";\r\n\r\nimport { URL } from \"../components/App\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faEnvelope,\r\n  faEnvelopeOpenText,\r\n  faKey,\r\n  faUserGraduate,\r\n  faUserTie,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { InputGroup, Form, Button, Card, FormGroup } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\n\r\nconst MAJORLIST = [\"컴퓨터공학\", \"경영\", \"화학\"];\r\n\r\nfunction RegisterForm({ history }) {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [authNum, setAuthNum] = useState(\"\");\r\n  const [reAuthTime, setReAuthTime] = useState(180);\r\n  const [sented, setSented] = useState(false);\r\n  const [password, setPassword] = useState(\"\");\r\n  const [major, setMajor] = useState(\"\");\r\n  const [nickname, setNickname] = useState(\"\");\r\n\r\n  function sendEmail() {\r\n    Axios.post(URL + \"auth/sendEmail\", { email }).then((response) => {\r\n      console.log(response.data);\r\n      alert(\"이메일을 확인해주세요!\");\r\n    });\r\n\r\n    setSented(true);\r\n    setTimer();\r\n  }\r\n\r\n  function checkEmail() {\r\n    Axios.post(URL + \"auth/authEmail\", { email, authNum }).then((res) => {\r\n      res.data === \"fail\"\r\n        ? alert(\"인증에 실패했어요.\")\r\n        : alert(\"인증에 성공했습니다.\");\r\n    });\r\n  }\r\n\r\n  const setTimer = () => {\r\n    let a = reAuthTime - 1;\r\n    setReAuthTime(a);\r\n    const timer = setInterval(() => {\r\n      setReAuthTime(a);\r\n      if (a === 0) {\r\n        setReAuthTime(180);\r\n        clearInterval(timer);\r\n      }\r\n      a--;\r\n    }, 1000);\r\n  };\r\n  function sendRegisterInfo() {\r\n    Axios.post(URL + \"user\", { id: email, password, nickname, major }).then(\r\n      (res) => {\r\n        if (res.data === \"fail\") alert(\"오류가 발생했어요.\");\r\n        else {\r\n          console.log(\"회원가입에 성공했습니다. 홈으로 돌아갑니다.\");\r\n          history.push(\"/\");\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Card className=\"mt-3\" bg=\"light\">\r\n      <Card.Body\r\n        className=\"mt-3 mx-auto text-center\"\r\n        style={{ maxWidth: \"400px\" }}\r\n      >\r\n        <h4>회원가입</h4>\r\n        <Form>\r\n          <FormGroup>\r\n            <InputGroup>\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text>\r\n                  <FontAwesomeIcon icon={faEnvelope} />\r\n                </InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <Form.Control\r\n                placeholder=\"이메일을 알려주세요\"\r\n                type=\"text\"\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n              <InputGroup.Append>\r\n                <InputGroup.Text>@hknu.ac.kr</InputGroup.Text>\r\n              </InputGroup.Append>\r\n            </InputGroup>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            {email.length === 0 || reAuthTime !== 180 ? (\r\n              <Button block disabled>\r\n                {reAuthTime === 180\r\n                  ? \"메일 인증\"\r\n                  : reAuthTime + \"초 후에 다시 시도해주세요!!\"}\r\n              </Button>\r\n            ) : (\r\n              <Button block onClick={sendEmail}>\r\n                메일 인증\r\n              </Button>\r\n            )}\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <InputGroup>\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text>\r\n                  <FontAwesomeIcon icon={faEnvelopeOpenText} />\r\n                </InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <Form.Control\r\n                placeholder=\"인증번호 확인\"\r\n                type=\"text\"\r\n                onChange={(e) => setAuthNum(e.target.value)}\r\n              />\r\n              <InputGroup.Append>\r\n                {sented ? (\r\n                  <Button onClick={checkEmail}>확인</Button>\r\n                ) : (\r\n                  <Button disabled>확인</Button>\r\n                )}\r\n              </InputGroup.Append>\r\n            </InputGroup>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <InputGroup>\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text>\r\n                  <FontAwesomeIcon icon={faKey} />\r\n                </InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <Form.Control\r\n                placeholder=\"비밀번호는 영문과 숫자를 섞어주세요. 😄\"\r\n                type=\"password\"\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              />\r\n            </InputGroup>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <InputGroup>\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text>\r\n                  <FontAwesomeIcon icon={faUserGraduate} />\r\n                </InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <select\r\n                className=\"custom-select\"\r\n                onChange={(e) => setMajor(MAJORLIST[e.target.value])}\r\n              >\r\n                <option>학과를 골라주세요.</option>\r\n                {MAJORLIST.map((major, index) => {\r\n                  return (\r\n                    <option key={index} value={index}>\r\n                      {major}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select>\r\n            </InputGroup>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <InputGroup>\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text>\r\n                  <FontAwesomeIcon icon={faUserTie} />\r\n                </InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <Form.Control\r\n                placeholder=\"별명을 골라주시겠어요? 😎\"\r\n                type=\"text\"\r\n                onChange={(e) => setNickname(e.target.value)}\r\n              />\r\n            </InputGroup>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Button block onClick={sendRegisterInfo}>\r\n              회원 가입\r\n            </Button>\r\n          </FormGroup>\r\n          <p className=\"text-center\">\r\n            계정이 있으신가요?<Link to=\"/user/login\"> 로그인 </Link>\r\n          </p>\r\n        </Form>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default RegisterForm;\r\n","import React from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport RegisterForm from \"../components/RegisterForm\";\r\n\r\nfunction Register({ history }) {\r\n  return (\r\n    <Container>\r\n      <RegisterForm history={history} />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Container,\r\n  Form,\r\n  ToggleButton,\r\n  ToggleButtonGroup,\r\n  Card,\r\n  Button,\r\n} from \"react-bootstrap\";\r\nimport Axios from \"axios\";\r\nimport { URL } from \"../components/App\";\r\nimport { classTypes, classTypesRaw } from \"../components/App\";\r\n\r\nconst weeks = [\"월\", \"화\", \"수\", \"목\", \"금\", \"토\", \"일\"];\r\nconst weeksRaw = [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"];\r\nconst categorys = [\"컴퓨터공학\", \"수학\", \"영어\"];\r\nconst tuteeMaxArray = [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];\r\nlet classInfo = {};\r\n\r\nfunction MakeClass({ history }) {\r\n  const [category, setCategory] = useState(categorys[0]);\r\n  const [studyAbout, setStudyAbout] = useState(\"\");\r\n  const [classname, setClassName] = useState(\"\");\r\n  const [price, setPrice] = useState(0);\r\n  const [classTypeSelect, setSelect] = useState(0);\r\n\r\n  const [startTime, setStartTime] = useState(1200);\r\n  const [endTime, setEndTime] = useState(1200);\r\n  const [date, setDate] = useState([]);\r\n\r\n  const [classDesc, setClDe] = useState(\"\");\r\n  const [courseDesc, setCoDe] = useState(\"\");\r\n  const [maxTutee, setMaxTutee] = useState(tuteeMaxArray[0]);\r\n\r\n  const [place, setPlace] = useState(\"\");\r\n  const [grade, setGrade] = useState(\"\");\r\n  let startTimeArray = [];\r\n  let endTimeArray = [];\r\n  for (\r\n    let index = 1200;\r\n    index < 2201;\r\n    index % 100 === 0 ? (index = index + 30) : (index = index + 70)\r\n  ) {\r\n    startTimeArray.push(index);\r\n  }\r\n\r\n  for (\r\n    let index = startTime;\r\n    index < 2201;\r\n    index % 100 === 0 ? (index = index + 30) : (index = index + 70)\r\n  ) {\r\n    endTimeArray.push(index);\r\n  }\r\n\r\n  const submitToDB = () => {\r\n    let data = {\r\n      classType: classTypesRaw[classTypeSelect],\r\n      category,\r\n      studyAbout,\r\n      className: classname,\r\n      price,\r\n      grade,\r\n      class_description: classDesc,\r\n    };\r\n    switch (classTypeSelect) {\r\n      case 0:\r\n        data = {\r\n          ...data,\r\n          time_day: weeksRaw[date],\r\n          time_start: startTime,\r\n          time_finish: endTime,\r\n          course_description: courseDesc,\r\n          maxTutee,\r\n        };\r\n        break;\r\n\r\n      case 1:\r\n        break;\r\n\r\n      case 2:\r\n        data = {\r\n          ...data,\r\n          time_day: weeksRaw[date],\r\n          time_start: startTime,\r\n          time_finish: endTime,\r\n        };\r\n        break;\r\n\r\n      case 3:\r\n        data = {\r\n          ...data,\r\n          time_day: weeksRaw[date],\r\n          time_start: startTime,\r\n          time_finish: endTime,\r\n          place,\r\n          maxTutee,\r\n        };\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n    console.log(data);\r\n\r\n    Axios.post(URL + \"class\", data).then((res) => {\r\n      if (res.data === \"fail\") {\r\n        alert(\"등록에 실패했어요.. 잘못된게 있나 확인해주세요!\");\r\n      } else {\r\n        alert(\"등록에 성공했어요!! 홈화면으로 돌아갑니다!\");\r\n        classInfo = res;\r\n        console.log(classInfo);\r\n        history.push(\"/\");\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Container className=\"mt-md-3\">\r\n      <h2>수업방식을 골라주세요!</h2>\r\n      <ToggleButtonGroup\r\n        type=\"radio\"\r\n        name=\"options\"\r\n        style={{ display: \"flex\" }}\r\n        className=\"mx-md-2 text-center my-md-3\"\r\n        aria-label=\"Type group\"\r\n        defaultValue={0}\r\n        onChange={(e) => {\r\n          setSelect(e);\r\n        }}\r\n      >\r\n        {classTypes.map((classType, index) => {\r\n          return (\r\n            <ToggleButton size=\"lg\" key={index} type=\"radio\" value={index}>\r\n              {classType}\r\n            </ToggleButton>\r\n          );\r\n        })}\r\n      </ToggleButtonGroup>\r\n      <Card>\r\n        <Card.Body>\r\n          <Form>\r\n            <Form.Group>\r\n              <Form.Label>수업 이름 정하셨나요?</Form.Label>\r\n              <Form.Control\r\n                placeholder=\"수업이름은 누구든 쉽게 알수있는 이름이 좋아요! 😃\"\r\n                onChange={(e) => {\r\n                  setClassName(e.target.value);\r\n                }}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>분야를 알려주세요!</Form.Label>\r\n              <Form.Control\r\n                as=\"select\"\r\n                onChange={(e) => {\r\n                  setCategory(e.target.value);\r\n                }}\r\n              >\r\n                {categorys.map((category, index) => {\r\n                  return <option key={index}>{category}</option>;\r\n                })}\r\n              </Form.Control>\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>간략히 수업 소개</Form.Label>\r\n              <Form.Control\r\n                as=\"textarea\"\r\n                rows=\"2\"\r\n                placeholder=\"이 수업을 한줄로 요약한다면!!😄\"\r\n                onChange={(e) => {\r\n                  setStudyAbout(e.target.value);\r\n                }}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>수업 설명</Form.Label>\r\n              <Form.Control\r\n                as=\"textarea\"\r\n                rows=\"2\"\r\n                placeholder=\"수업설명\"\r\n                onChange={(e) => {\r\n                  setClDe(e.target.value);\r\n                }}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>성적인증</Form.Label>\r\n              <Form.Control\r\n                onChange={(e) => setGrade(e.target.value)}\r\n                placeholder=\"성적을 인증할수있는 링크를 주세요!(추후 이미지 저장으로 바뀔예정입니다 😀 )\"\r\n              />\r\n            </Form.Group>\r\n\r\n            {classTypeSelect !== 1 ? ( //온라인 동영상 강의를 제외한 수업에 필요한 요소\r\n              <>\r\n                <Form.Group>\r\n                  <Form.Label style={{ display: \"block\" }}>\r\n                    수업 요일을 골라주세요!(아직은 하나만 골라주세요!)\r\n                  </Form.Label>\r\n                  <ToggleButtonGroup\r\n                    type=\"checkbox\"\r\n                    className=\"mb-2\"\r\n                    onChange={(e) => {\r\n                      setDate(e);\r\n                    }}\r\n                  >\r\n                    {weeks.map((week, index) => {\r\n                      return (\r\n                        <ToggleButton key={index} value={index}>\r\n                          {week}\r\n                        </ToggleButton>\r\n                      );\r\n                    })}\r\n                  </ToggleButtonGroup>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                  <Form.Label>수업시간을 골라주세요!</Form.Label>\r\n                  <Form.Control\r\n                    as=\"select\"\r\n                    onChange={(e) => {\r\n                      setStartTime(Number.parseInt(e.target.value));\r\n                    }}\r\n                  >\r\n                    {startTimeArray.map((time, index) => {\r\n                      return (\r\n                        <option key={index} value={time}>\r\n                          {time.toString().substring(0, 2) +\r\n                            \":\" +\r\n                            time.toString().substring(2)}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                  </Form.Control>\r\n                  <Form.Label>종료시간</Form.Label>\r\n                  <Form.Control\r\n                    as=\"select\"\r\n                    onChange={(e) => {\r\n                      setEndTime(Number.parseInt(e.target.value));\r\n                    }}\r\n                  >\r\n                    {endTimeArray.map((time, index) => {\r\n                      return (\r\n                        <option key={index} value={time}>\r\n                          {time.toString().substring(0, 2) +\r\n                            \":\" +\r\n                            time.toString().substring(2)}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                  </Form.Control>\r\n                </Form.Group>\r\n              </>\r\n            ) : null}\r\n\r\n            {classTypeSelect === 0 || classTypeSelect === 2 ? (\r\n              <Form.Group>\r\n                <Form.Label>커리큘럼</Form.Label>\r\n                <Form.Control\r\n                  as=\"textarea\"\r\n                  rows=\"4\"\r\n                  placeholder=\"수업을 어떻게 진행하실껀가요?\"\r\n                  onChange={(e) => setCoDe(e.target.value)}\r\n                />\r\n              </Form.Group>\r\n            ) : null}\r\n\r\n            {classTypeSelect === 0 || classTypeSelect === 3 ? (\r\n              <Form.Group>\r\n                <Form.Label>튜티수를 골라주셔야됩니다!</Form.Label>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  onChange={(e) => {\r\n                    setMaxTutee(e.target.value);\r\n                  }}\r\n                >\r\n                  {tuteeMaxArray.map((tuteeMax, index) => {\r\n                    return (\r\n                      <option key={index} value={tuteeMax}>\r\n                        {tuteeMax}\r\n                      </option>\r\n                    );\r\n                  })}\r\n                </Form.Control>\r\n              </Form.Group>\r\n            ) : null}\r\n\r\n            {classTypeSelect === 3 ? (\r\n              <Form.Group>\r\n                <Form.Label>어디서 할지 정하셨나요?</Form.Label>\r\n                <Form.Control\r\n                  as=\"textarea\"\r\n                  rows=\"4\"\r\n                  placeholder=\"ex) 학교 도서관, 혜움, 카페, 우리집😍\"\r\n                  onChange={(e) => setPlace(e.target.value)}\r\n                />\r\n              </Form.Group>\r\n            ) : null}\r\n            <Form.Group>\r\n              <Form.Label>가격</Form.Label>\r\n              <Form.Control\r\n                placeholder=\"몇 포인트정도의 수업일까요?(최대 1,000포인트)\"\r\n                onChange={(e) => setPrice(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n          </Form>\r\n          <Button block onClick={submitToDB}>\r\n            수업 개설\r\n          </Button>\r\n        </Card.Body>\r\n      </Card>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default MakeClass;\r\n","import React, { useState } from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport Axios from \"axios\";\r\nimport { URL } from \"../components/App\";\r\n\r\nfunction User({ history }) {\r\n  const [user, setUserInfo] = useState({ isDataQuerried: false, nickname: \"\" });\r\n  const [classes, setClasses] = useState([]);\r\n  if (user.isDataQuerried === false) {\r\n    Axios.get(URL + \"auth/isAuthenticated\").then((response) => {\r\n      if (response.data === \"fail\") {\r\n        alert(\"잘못된 접근입니다.\");\r\n        history.push(\"/\");\r\n      } else {\r\n        setUserInfo(response.data);\r\n        console.log(response.data);\r\n      }\r\n    });\r\n    Axios.get(URL + \"class/name/all\").then((response) => {\r\n      setClasses(response.data);\r\n      console.log(response.data);\r\n    });\r\n    setUserInfo({ isDataQuerried: true });\r\n  }\r\n  return (\r\n    <Container>\r\n      {user.nickname === \"\" ? null : (\r\n        <>\r\n          <h1>안녕하세요! {user.nickname}님!</h1>\r\n          <h2>이메일 : {user.webmail}</h2>\r\n          <h2>현재 나의 포인트 : {user.point}</h2>\r\n          <p>classesAsTutor</p>\r\n          {classes.length && user.classesAsTutor.length ? (\r\n            <ol>\r\n              {user.classesAsTutor.map((classID) => {\r\n                const _class = classes.filter((_class) => {\r\n                  return _class._id === classID;\r\n                });\r\n                return <li>{_class[0].className}</li>;\r\n              })}\r\n            </ol>\r\n          ) : (\r\n            <p>개설한 수업이 없네요! 개설하시겠어요? Button</p>\r\n          )}\r\n          <p>classesAsTutee</p>\r\n          {classes.length && user.classesAsTutee.length ? (\r\n            <ol>\r\n              {user.classesAsTutee.map((classID) => {\r\n                const _class = classes.filter((_class) => {\r\n                  return _class._id === classID;\r\n                });\r\n                return <li>{_class[0].className}</li>;\r\n              })}\r\n            </ol>\r\n          ) : (\r\n            <p>수강하시는 수업이 없네요? 수강하시겠어요? Button</p>\r\n          )}\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\nexport default User;\r\n","import React from \"react\";\r\n\r\nfunction Footer() {\r\n  return <h1>This is Footer</h1>;\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Route } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport Axios from \"axios\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Navigation from \"../components/Navigation\";\r\nimport Home from \"../routes/Home\";\r\nimport About from \"../routes/About\";\r\nimport Class from \"../routes/Class\";\r\nimport ClassEdit from \"../routes/ClassEdit\";\r\nimport Login from \"../routes/Login\";\r\nimport Register from \"../routes/Register\";\r\nimport MakeClass from \"../routes/MakeClass\";\r\nimport User from \"../routes/User\";\r\nimport { updateClass, updateUser, logout } from \"../store\";\r\nimport Footer from \"./Footer\";\r\n\r\n//서버주소\r\nexport const URL = \"http://localhost:3000/\";\r\n\r\nexport const classTypes = [\r\n  \"온라인 실시간\",\r\n  \"온라인 동영상\",\r\n  \"온라인 질의응답\",\r\n  \"오프라인 질의응답\",\r\n];\r\nexport const classTypesRaw = [\r\n  \"RealtimeOnlineCourseType\",\r\n  \"OnlineCourseType\",\r\n  \"QnAType\",\r\n  \"OfflineType\",\r\n];\r\nexport const statesRaw = [\"Prepare\", \"Joinable\", \"Ended\", \"InProgress\"];\r\nexport const states = [\"준비중\", \"참가가능\", \"완료\", \"진행중\"];\r\n\r\nfunction App({ dispatchUser, dlogout, dispatchClass }) {\r\n  //초기 시작되면 사용자의 세션이 남아있는 서버에 확인\r\n  checkAuth({ dispatchUser, dlogout });\r\n  // 모든 클래스를 불러오는 함수\r\n  checkClass({ dispatchClass });\r\n  return (\r\n    <Router>\r\n      <Navigation />\r\n      <Route path=\"/\" exact component={Home} />\r\n      <Route path=\"/about\" component={About} />\r\n      <Route path=\"/user\" exact component={User} />\r\n      <Route path=\"/user/login\" component={Login} />\r\n      <Route path=\"/user/register\" component={Register} />\r\n      <Route path=\"/class/id/:id\" exact component={Class} />\r\n      <Route path=\"/class/id/:id/edit\" exact component={ClassEdit} />\r\n      <Route path=\"/class/new\" exact component={MakeClass} />\r\n      <Footer />\r\n    </Router>\r\n  );\r\n}\r\n\r\n//현재 세션이 유효한지 확인하는 function\r\nexport const checkAuth = ({ dispatchUser, dlogout }) => {\r\n  Axios.get(URL + \"auth/isAuthenticated\")\r\n    .then((response) => {\r\n      if (response.data === \"fail\") {\r\n        dlogout();\r\n      } else {\r\n        dispatchUser(response.data);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n      alert(\"failed to get authentication\");\r\n    });\r\n};\r\n\r\n//모든 Class를 업데이트하는 function\r\nexport function checkClass({ dispatchClass }) {\r\n  Axios.get(URL + \"class/name/all\")\r\n    .then((response) => {\r\n      dispatchClass(response.data);\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    });\r\n}\r\n\r\n//store.js\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    dispatchClass: (classes) => dispatch(updateClass(classes)),\r\n    dispatchUser: (data) => dispatch(updateUser(data)),\r\n    dlogout: () => dispatch(logout()),\r\n  };\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(App);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}